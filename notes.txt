Q. What is OOP or Object Oriented Programming?
A.  Paradigm or Style of programming centred around objects instead of functions.

Languages with OOP
  C#
  Java
  Ruby
  Python
  JavaScript

Learn OOP Principles
4 Pillars of Object Oriented Programming
  Encapsulation
    - group related variables and functions that operate on them into objects.
    This is what is called encapsulation.
  Abstraction
    - hiding the complexity (e.g. DVD board and push buttons)
      Hide methods and properties to reduce impact of change and reduce complexity of the user interface
  Inheritance
    - allows programmer to eliminate redundant code. Allows elements to inherit   
      Object properties and methods without starting from scratch.
  Polymorphism
    - a technique allows programmer to get rid of long if and else and switch case 
      statements

Old Way - Procedural Programming
- divide a program in a set of functions
- Spaghetti code - interdepency with code

Objects - properties and methods
Topics:
    - Creating Objects
      Object literals
    - Factories and Constructors
      Factories return a new object
      Constructors return new instances of an object like classes in other languages.
    - Primitives and Reference Types
      Primitives are copied by value
      Reference types are copied by the reference or address in memory
    - Working with Properties
      - Enumerate keys or values 'for in' loop
      - Get all keys Object.keys
      - Find if a property is in an object using the 'in' method
    - Private Properties
    - Getters/Setters
      - Object.defineProperty: accepts three parameters (object, 'property', {object with a get function})


Notes on iterating properties of Objects
  - Iterating an object with Object.keys only returns instance members - methods      and properties inside the function
  - How about for in loop? Iterating Objects using the 'for in' loop returns 
    instance and members
  - Using Object.hasOwnProperty('member') only returns instance members of the    
    object and not the prototype members